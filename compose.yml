# yaml-language-server: $schema=https://raw.githubusercontent.com/compose-spec/compose-spec/main/schema/compose-spec.json
services:
  ghost:
    image: ghost:6-alpine
    restart: always
    environment:
      NODE_ENV: production
      url: https://${DOMAIN}
      database__client: mysql
      database__connection__host: db
      database__connection__user: ${DATABASE_USER}
      database__connection__password: ${DATABASE_PASSWORD}
      database__connection__database: ghost
      mail__transport: ${MAIL_TRANSPORT}
      mail__options__host: ${MAIL_HOST}
      mail__options__port: ${MAIL_PORT}
      mail__options__secure: ${MAIL_SECURE}
      mail__options__auth__user: ${MAIL_USER}
      mail__options__auth__pass: ${MAIL_PASSWORD}
      mail__from: ${MAIL_FROM}
      ACTIVITYPUB_TARGET: ${ACTIVITYPUB_TARGET}
      COMPOSE_PROFILES: ${COMPOSE_PROFILES}
    volumes:
      - ./data/ghost:/var/lib/ghost/content
    depends_on:
      db:
        condition: service_healthy
      activitypub:
        condition: service_started
        required: true
    networks:
      - dokploy-network
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.ghost.rule=Host(`${DOMAIN}`)"
      - "traefik.http.routers.ghost.entrypoints=websecure"
      - "traefik.http.routers.ghost.tls.certresolver=letsencrypt"
      - "traefik.http.services.ghost.loadbalancer.server.port=2368"

      # Security Headers
      - "traefik.http.middlewares.security-headers.headers.customrequestheaders.Strict-Transport-Security=max-age=31536000"
      - "traefik.http.middlewares.security-headers.headers.customrequestheaders.X-XSS-Protection=1; mode=block"
      - "traefik.http.middlewares.security-headers.headers.customrequestheaders.X-Content-Type-Options=nosniff"
      - "traefik.http.middlewares.security-headers.headers.customrequestheaders.Referrer-Policy=strict-origin-when-cross-origin"

      # Compression
      - "traefik.http.middlewares.gzip.compress=true"

      # Apply middlewares
      - "traefik.http.routers.ghost.middlewares=security-headers,gzip"

  db:
    image: mysql:8.0.42@sha256:4445b2668d41143cb50e471ee207f8822006249b6859b24f7e12479684def5d9
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: ${DATABASE_ROOT_PASSWORD}
      MYSQL_USER: ${DATABASE_USER}
      MYSQL_PASSWORD: ${DATABASE_PASSWORD}
      MYSQL_DATABASE: ghost
      MYSQL_MULTIPLE_DATABASES: activitypub
    volumes:
      - ./data/mysql:/var/lib/mysql
      - ../mysql-init:/docker-entrypoint-initdb.d
    healthcheck:
      test: mysqladmin ping -p$$MYSQL_ROOT_PASSWORD -h 127.0.0.1
      interval: 1s
      start_period: 30s
      start_interval: 10s
      retries: 120
    networks:
      - dokploy-network

  activitypub:
    build:
      context: ../activitypub
    restart: always
    volumes:
      - ./data/ghost:/opt/activitypub/content
    environment:
      NODE_ENV: production
      PORT: 8080
      MYSQL_HOST: db
      MYSQL_USER: ${DATABASE_USER}
      MYSQL_PASSWORD: ${DATABASE_PASSWORD}
      MYSQL_DATABASE: activitypub
      ALLOW_PRIVATE_ADDRESS: true
      USE_MQ: false
      LOCAL_STORAGE_PATH: /opt/activitypub/content/images/activitypub
      LOCAL_STORAGE_HOSTING_URL: https://${DOMAIN}/content/images/activitypub
    depends_on:
      db:
        condition: service_healthy
      activitypub-migrate:
        condition: service_completed_successfully
    profiles: [activitypub]
    networks:
      - dokploy-network
    labels:
      - "traefik.enable=true"

      # ActivityPub endpoints
      - "traefik.http.routers.activitypub.rule=Host(`${DOMAIN}`) && PathPrefix(`/.ghost/activitypub`)"
      - "traefik.http.routers.activitypub.entrypoints=websecure"
      - "traefik.http.routers.activitypub.tls.certresolver=letsencrypt"
      - "traefik.http.routers.activitypub.priority=100"

      # WebFinger endpoint
      - "traefik.http.routers.webfinger.rule=Host(`${DOMAIN}`) && Path(`/.well-known/webfinger`)"
      - "traefik.http.routers.webfinger.entrypoints=websecure"
      - "traefik.http.routers.webfinger.tls.certresolver=letsencrypt"
      - "traefik.http.routers.webfinger.priority=100"

      # NodeInfo endpoint
      - "traefik.http.routers.nodeinfo.rule=Host(`${DOMAIN}`) && Path(`/.well-known/nodeinfo`)"
      - "traefik.http.routers.nodeinfo.entrypoints=websecure"
      - "traefik.http.routers.nodeinfo.tls.certresolver=letsencrypt"
      - "traefik.http.routers.nodeinfo.priority=100"

      - "traefik.http.services.activitypub.loadbalancer.server.port=8080"
      - "traefik.http.routers.activitypub.middlewares=security-headers"
      - "traefik.http.routers.webfinger.middlewares=security-headers"
      - "traefik.http.routers.nodeinfo.middlewares=security-headers"

  activitypub-migrate:
    build:
      context: ../code/activitypub/migrate
    environment:
      MYSQL_DB: mysql://${DATABASE_USER}:${DATABASE_PASSWORD}@tcp(db:3306)/activitypub
    depends_on:
      db:
        condition: service_healthy
    profiles: [activitypub]
    restart: no
    networks:
      - dokploy-network
    command: >
      sh -c "sleep 5 && migrate -path /migrations -database $${MYSQL_DB} up"

networks:
  dokploy-network:
    external: true
